{
  "name": "djlint",
  "displayName": "djLint",
  "version": "2024.10.0",
  "description": "HTML template formatter and linter (Django, Jinja, Nunjucks, Twig, Handlebars, Mustache)",
  "categories": [
    "Formatters",
    "Linters"
  ],
  "homepage": "https://github.com/djlint/djlint-vscode",
  "bugs": {
    "url": "https://github.com/djlint/djlint-vscode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/djlint/djlint-vscode"
  },
  "license": "MIT",
  "publisher": "monosans",
  "type": "module",
  "main": "./dist/extension.cjs",
  "scripts": {
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.cjs --external:vscode --format=cjs --platform=node --target=node20.9",
    "format": "prettier --write .",
    "lint": "eslint --max-warnings 0 . && tsc",
    "vscode:prepublish": "node ./build/minify-package-json.mjs && npm run esbuild-base -- --minify",
    "watch:esbuild": "npm run esbuild-base -- --sourcemap --watch",
    "watch:tsc": "tsc --watch"
  },
  "contributes": {
    "configuration": {
      "properties": {
        "djlint.blankLineAfterTag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Add an additional blank line after {% <tag> ... %} tag groups. Requires djLint ≥ 1.25."
        },
        "djlint.blankLineBeforeTag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Add an additional blank line before {% <tag> ... %} tag groups. Requires djLint ≥ 1.25."
        },
        "djlint.closeVoidTags": {
          "type": "boolean",
          "default": false,
          "description": "Add closing mark on known void tags. Ex: <img> becomse <img />. Requires djLint ≥ 1.26."
        },
        "djlint.configuration": {
          "type": "string",
          "default": "",
          "description": "Path to the configuration file. The path can be relative to the workspace root. Requires djLint ≥ 1.13 for .djlintrc format and ≥ 1.34 for TOML."
        },
        "djlint.customBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Indent custom template blocks. Requires djLint ≥ 1.25."
        },
        "djlint.customHtml": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Indent custom HTML tags. Requires djLint ≥ 1.25."
        },
        "djlint.enableLinting": {
          "type": "boolean",
          "default": false,
          "scope": "language-overridable",
          "description": "Lint for common issues."
        },
        "djlint.exclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Override the default exclude paths. Requires djLint ≥ 1.25."
        },
        "djlint.extendExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Add additional paths to the default exclude. Requires djLint ≥ 1.25."
        },
        "djlint.formatAttributeTemplateTags": {
          "type": "boolean",
          "default": false,
          "description": "Attempt to format template syntax inside of tag attributes. Requires djLint ≥ 1.25."
        },
        "djlint.formatCss": {
          "type": "boolean",
          "default": false,
          "description": "Also format contents of <style> tags. Requires djLint ≥ 1.9."
        },
        "djlint.formatLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "django-html",
            "jinja",
            "jinja-html",
            "nj",
            "njk",
            "nunjucks",
            "twig",
            "handlebars",
            "hbs",
            "mustache",
            "html"
          ],
          "description": "Language IDs for which djLint should be registered as a formatter."
        },
        "djlint.formatJs": {
          "type": "boolean",
          "default": false,
          "description": "Also format contents of <script> tags. Requires djLint ≥ 1.9."
        },
        "djlint.ignore": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Codes to ignore. Requires djLint ≥ 0.1.5."
        },
        "djlint.ignoreBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Template blocks to not indent. Requires djLint ≥ 1.24."
        },
        "djlint.ignoreCase": {
          "type": "boolean",
          "default": false,
          "description": "Do not fix case on known html tags. Requires djLint ≥ 1.23."
        },
        "djlint.include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Codes to include. Requires djLint ≥ 1.20."
        },
        "djlint.indentCss": {
          "type": [
            "integer",
            null
          ],
          "default": null,
          "description": "CSS indent level. Requires djLint ≥ 1.25."
        },
        "djlint.indentJs": {
          "type": [
            "integer",
            null
          ],
          "default": null,
          "description": "JS indent level. Requires djLint ≥ 1.25."
        },
        "djlint.lineBreakAfterMultilineTag": {
          "type": "boolean",
          "default": false,
          "description": "Do not condense the content of multi-line tags into the line of the last attribute. Requires djLint ≥ 1.27."
        },
        "djlint.maxAttributeLength": {
          "type": [
            "integer",
            null
          ],
          "default": null,
          "description": "Max attribute length. Requires djLint ≥ 1.25."
        },
        "djlint.maxBlankLines": {
          "type": [
            "integer",
            null
          ],
          "default": null,
          "description": "Consolidate blank lines down to x lines. Requires djLint ≥ 1.31."
        },
        "djlint.maxLineLength": {
          "type": [
            "integer",
            null
          ],
          "default": null,
          "description": "Max line length. Requires djLint ≥ 1.25."
        },
        "djlint.noFunctionFormatting": {
          "type": "boolean",
          "default": false,
          "description": "Do not attempt to format function contents. Requires djLint ≥ 1.30.2."
        },
        "djlint.noLineAfterYaml": {
          "type": "boolean",
          "default": false,
          "description": "Do not add a blank line after yaml front matter. Requires djLint ≥ 1.29."
        },
        "djlint.noSetFormatting": {
          "type": "boolean",
          "default": false,
          "description": "Do not attempt to format set contents. Requires djLint ≥ 1.30.2."
        },
        "djlint.preserveBlankLines": {
          "type": "boolean",
          "default": false,
          "description": "Preserve blank lines. Requires djLint ≥ 1.3."
        },
        "djlint.preserveLeadingSpace": {
          "type": "boolean",
          "default": false,
          "description": "Preserve leading space. Requires djLint ≥ 1.2."
        },
        "djlint.profile": {
          "type": "string",
          "enum": [
            "",
            "django",
            "jinja",
            "nunjucks",
            "handlebars",
            "golang",
            "angular",
            "html"
          ],
          "default": "",
          "scope": "language-overridable",
          "description": "Enable defaults by template language. Requires djLint ≥ 0.4.5."
        },
        "djlint.pythonPath": {
          "type": "string",
          "minLength": 1,
          "default": "python",
          "description": "Path to the desired Python interpreter. Only used if djlint.useVenv is disabled or the Python extension is not installed."
        },
        "djlint.requirePragma": {
          "type": "boolean",
          "default": false,
          "description": "Only format or lint files that start with a comment with the text 'djlint:on'. Requires djLint ≥ 0.5.8."
        },
        "djlint.showInstallError": {
          "type": "boolean",
          "default": true,
          "description": "Show error message when djLint is not installed."
        },
        "djlint.useEditorIndentation": {
          "type": "boolean",
          "default": true,
          "description": "Get the number of indent spaces from VS Code (see the editor.tabSize setting). Disable to get it from the djLint config file. Requires djLint ≥ 0.4.3."
        },
        "djlint.useGitignore": {
          "type": "boolean",
          "default": false,
          "description": "Use .gitignore file to extend excludes. Requires djLint ≥ 0.5.9."
        },
        "djlint.useNewLinterOutputParser": {
          "type": "boolean",
          "default": true,
          "description": "Use a new, more reliable linter output parser. If you disable this setting, make sure that you have not changed the linter_output_format setting in the djLint configuration file. Requires djLint ≥ 1.25."
        },
        "djlint.useVenv": {
          "type": "boolean",
          "default": true,
          "description": "Use the Python executable from the current active environment. The Python extension must be installed, if it is not installed, the djlint.pythonPath setting will be used."
        }
      }
    },
    "configurationDefaults": {
      "[django-html]": {
        "djlint.enableLinting": true,
        "djlint.profile": "django"
      },
      "[jinja]": {
        "djlint.enableLinting": true,
        "djlint.profile": "jinja"
      },
      "[jinja-html]": {
        "djlint.enableLinting": true,
        "djlint.profile": "jinja"
      },
      "[nj]": {
        "djlint.enableLinting": true,
        "djlint.profile": "nunjucks"
      },
      "[njk]": {
        "djlint.enableLinting": true,
        "djlint.profile": "nunjucks"
      },
      "[nunjucks]": {
        "djlint.enableLinting": true,
        "djlint.profile": "nunjucks"
      },
      "[twig]": {
        "djlint.enableLinting": true,
        "djlint.profile": "nunjucks"
      },
      "[handlebars]": {
        "djlint.enableLinting": true,
        "djlint.profile": "handlebars"
      },
      "[hbs]": {
        "djlint.enableLinting": true,
        "djlint.profile": "handlebars"
      },
      "[mustache]": {
        "djlint.enableLinting": true,
        "djlint.profile": "handlebars"
      },
      "[html]": {
        "djlint.enableLinting": true
      }
    }
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "dependencies": {
    "@vscode/python-extension": "1.0.5",
    "execa": "9.5.2"
  },
  "devDependencies": {
    "@eslint/js": "9.20.0",
    "@ianvs/prettier-plugin-sort-imports": "4.4.1",
    "@total-typescript/ts-reset": "0.6.1",
    "@tsconfig/strictest": "2.0.5",
    "@types/eslint-config-prettier": "6.11.3",
    "@types/eslint__js": "8.42.3",
    "@types/node": "20.17.18",
    "@types/vscode": "1.90.0",
    "esbuild": "0.25.0",
    "eslint": "9.20.1",
    "eslint-config-prettier": "10.0.1",
    "eslint-plugin-unicorn": "56.0.1",
    "prettier": "3.5.1",
    "prettier-plugin-packagejson": "2.5.8",
    "typescript": "5.7.3",
    "typescript-eslint": "8.24.0"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "icon": "icon.png"
}
